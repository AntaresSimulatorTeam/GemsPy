# Copyright (c) 2024, RTE (https://www.rte-france.com)
#
# See AUTHORS.txt
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of the Antares project.

#Andromede library file: defines the abstract models of components used in a system simulation

library:
  id: muessli-lib
  description: Simple model library with models for area, load, thermal, short-term-storage (ex:batteries), simple model for long-term storage (hydro with weekly allocation)

  port-types:
    - id: flow
      description: A port which transfers power flow
      fields:
        - id: flow

  models:
    - id: area
      parameters:
        - id: spillage_cost
        - id: ens_cost
      variables:
        - id: spillage
          lower-bound: 0
        - id: unsupplied_energy
          lower-bound: 0
      ports:
        - id: balance_port
          type: flow
      binding-constraints:
        - id: balance
          expression: sum_connections(balance_port.flow) = spillage - unsupplied_energy
      objective: expec(sum(spillage_cost * spillage + ens_cost * unsupplied_energy))

    - id: load
      parameters:
        - id: load
          time-dependent: true
          scenario-dependent: true
      ports:
        - id: balance_port
          type: flow
      port-field-definitions:
        - port: balance_port
          field: flow
          definition: -load

    - id: link
      parameters:
        - id: capacity_direct
          time-dependent: true
          scenario-dependent: true
        - id: capacity_indirect
          time-dependent: true
          scenario-dependent: true
      variables:
        - id: flow_direct
          lower-bound: 0
          upper-bound: capacity_direct
        - id: flow_indirect
          lower-bound: 0
          upper-bound: capacity_indirect
        - id: flow
      ports:
        - id: out_port
          type: flow
        - id: in_port
          type: flow
      port-field-definitions:
        - port: out_port
          field: flow
          definition: flow
        - port: in_port
          field: flow
          definition: -flow
      constraints:
        - id: flow_direct_indirect
          expression: flow = flow_direct - flow_indirect

    - id: thermal
      parameters:
        - id: p_max_cluster_nominal 
          scenario-dependent: false
          time-dependent: false
        - id: p_max_cluster_modulation # timeseries with adimensional values between 0 and 1. It takes outages into account.
          scenario-dependent: true
          time-dependent: true
        - id: p_min_unit
          scenario-dependent: false
          time-dependent: false
        - id: p_max_unit
          scenario-dependent: false
          time-dependent: false
        - id: generation_cost
          scenario-dependent: false
          time-dependent: false
        - id: startup_cost
          scenario-dependent: false
          time-dependent: false
        - id: fixed_cost
          scenario-dependent: false
          time-dependent: false
        - id: nb_units 
          scenario-dependent: false
          time-dependent: false
      variables:
        - id: p_max_cluster
          scenario-dependent: false
          time-dependent: false
          lower-bound: 0
          upper-bound: p_max_cluster_nominal
        - id: generation
          lower-bound: 0
          upper-bound: p_max_cluster_nominal
        - id: nb_units_on
          lower-bound: 0
          upper-bound: nb_units
          variable-type: integer
        - id: nb_starting
          lower-bound: 0
          upper-bound: nb_units
          variable-type: integer
        - id: nb_stopping
          lower-bound: 0
          variable-type: integer
      ports:
        - id: balance_port
          type: flow
      port-field-definitions:
        - port: balance_port
          field: flow
          definition: generation
      constraints:
        - id: availability
          expression: generation <= p_max_cluster*p_max_cluster_modulation
        - id: max_generation
          expression: generation <= nb_units_on * p_max_unit
        - id: min_generation
          expression: generation >= nb_units_on * p_min_unit
        - id: on_units_dynamics
          expression: nb_units_on = nb_units_on[t-1] + nb_starting - nb_stopping
      objective: expec(sum(generation_cost * generation + startup_cost * nb_starting + fixed_cost * nb_units_on))

    - id: short-term-storage
      parameters:
        - id: reservoir_capacity
          time-dependent: false
          scenario-dependent: false
        - id: injection_nominal_capacity
          time-dependent: false
          scenario-dependent: false
        - id: withdrawal_nominal_capacity
          time-dependent: false
          scenario-dependent: false
        - id: efficiency_injection
          time-dependent: false
          scenario-dependent: false
        - id: efficiency_withdrawal
          time-dependent: false
          scenario-dependent: false
        - id: lower_rule_curve
          time-dependent: true
          scenario-dependent: true
        - id: upper_rule_curve
          time-dependent: true
          scenario-dependent: true
        - id: p_max_injection_modulation  
          time-dependent: true
          scenario-dependent: true
        - id: p_max_withdrawal_modulation 
          time-dependent: true
          scenario-dependent: true
        - id: inflows
          time-dependent: true
          scenario-dependent: true
        - id: initial_level
          time-dependent: false
          scenario-dependent: false
      variables:
        - id: p_injection
          lower-bound: 0
          upper-bound: p_max_injection_modulation * injection_nominal_capacity # p_max_injection_modulation is a timeseries with adimensional values between 0 and 1
        - id: p_withdrawal
          lower-bound: 0
          upper-bound: p_max_withdrawal_modulation * withdrawal_nominal_capacity # p_max_withdrawal_modulation is a timeseries with adimensional values between 0 and 1
        - id: level
          lower-bound: lower_rule_curve * reservoir_capacity
          upper-bound: upper_rule_curve * reservoir_capacity
      ports:
        - id: balance_port
          type: flow
      port-field-definitions:
        - port: balance_port
          field: flow
          definition: p_withdrawal - p_injection
      constraints:
        - id: initial_level
          expression: level[0] = initial_level * reservoir_capacity
        - id: Level equation
          expression: level[t+1] = level + efficiency_injection * p_injection - efficiency_withdrawal * p_withdrawal + inflows

    - id: long-term-storage
      parameters:
        - id: injection_nominal_capacity
          time-dependent: false
          scenario-dependent: false
        - id: withdrawal_nominal_capacity
          time-dependent: false
          scenario-dependent: false
        - id: pumping_efficiency
          time-dependent: false
          scenario-dependent: false
        - id: p_max_injection_modulation  # Read in p_max_injection
          time-dependent: true
          scenario-dependent: true
        - id: p_max_withdrawal_modulation # Read in p_max_withdrawal
          time-dependent: true
          scenario-dependent: true
        - id: weekly_allocation
          time-dependent: false
          scenario-dependent: false
       
      variables:
        - id: p_injection #Power injected in the reservoir (pumping)
          lower-bound: 0
          upper-bound: p_max_injection_modulation * injection_nominal_capacity # p_max_injection_modulation is a timeseries with adimensional values between 0 and 1
        - id: p_withdrawal #Power withdrawn from the reservoir and injected in the network (turbining)
          lower-bound: 0
          upper-bound: p_max_withdrawal_modulation * withdrawal_nominal_capacity # p_max_withdrawal_modulation is a timeseries with adimensional values between 0 and 1
      ports:
        - id: balance_port
          type: flow
      port-field-definitions:
        - port: balance_port #The power flow injected in the network
          field: flow
          definition: p_withdrawal - p_injection
      constraints:
        - id: net_injection_credit
          expression: sum(p_withdrawal - p_injection*pumping_efficiency) <= weekly_allocation